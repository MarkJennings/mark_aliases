# Important: Make sure to put the following line in your .bashrc
# source ~/Documents/mark_aliases/aliases

# Note: Workspace sourcing is different for every computer, do that in ~/.bash_aliases
# ex. alias catk='source ~/catkin_ws/devel/setup.bash'

# Source the current repo, replacing any previous repo sourcing commands
alias sourcethis='unset CMAKE_PREFIX_PATH;source ./devel/setup.bash'
# Automatic return to your last-sourced catkin root directory
alias gohome='cd $(echo $CMAKE_PREFIX_PATH | cut -d ':' -f 1);cd ..'
# Automatic catkin build from any folder (use in conjunction with the above one-liner)
# Builds in Release mode, which can enable optimizations for some packages
# cm is short for catkin_make, and even though I use catkin tools now the abbreviation stuck
alias cm='(exec catkin build -j3 -DCMAKE_BUILD_TYPE=Release --summarize)'
# Clean catkin build (delete the generated folders, then catkin build)
alias cmclean='(rm -rf build devel && exec catkin build -j3 --summarize)'
# Build just the package specified after this alias, i.e. 'cmfast my_pkg'
alias cmfast='catkin build -j3 --no-deps'

# Change the format of ROS console output. This way you can get rid of the annoying timestamp.
# The total list of items you can add to this format string includes:
# severity message time thread logger file line function
export ROSCONSOLE_FORMAT='[${severity}] ${message}'

# Sometimes ROS just refuses to die
alias killros='killall -9 roscore; killall -9 rosmaster'

# Print current ROS package path
alias rpp='echo $ROS_PACKAGE_PATH'

# Clang format either an entire folder or individual files
function clangthis(){
	# If no parameters given, clang entire folder (and subfolders)
	if [ "$#" = 0 ]; then
		find . -name '*.h' -or -name '*.hpp' -or -name '*.cpp' -or -name '*.cc' | xargs clang-format-10 -i -style=file $1
		echo Clang formatted this folder
	# If parameter(s) given, clang all parameter files
	else
		clang-format-10 -i -style=file "$@"
		echo Clang formatted "$@"
	fi
}

# Brighten screens past default limits bc my room is too sunny :)
# 1st parameter is screen type: laptop, l, monitor, or m are accepted
# 2nd parameter is brightness multiplier: 1.0 by default
function brighten(){
	# If no parameters given (just 'brighten'), set to default values
	if [ "$#" = 0 ]; then
		xrandr --output eDP-1 --brightness 1.3
		xrandr --output DP-1 --brightness 1.1
		echo No parameters selected, laptop set to 1.3 and monitor to 1.1
	# If only one parameter is given, set all devices to that value
	elif [ "$#" = 1 ]; then
		xrandr --output eDP-1 --brightness $1
		xrandr --output DP-1 --brightness $1
		echo Brightness on all devices set to $1
	# If two parameters are given, set specific device to that value
	elif [ "$#" = 2 ]; then
		if [ "$1" = laptop ] || [ "$1" = l ]
		then
			xrandr --output eDP-1 --brightness $2
			echo Laptop brightness set to $2
		elif [ "$1" = monitor ] || [ "$1" = m ]
		then
			xrandr --output DP-1 --brightness $2
			echo Monitor brightness set to $2
		fi
	else
		echo 1st parameter is screen type: laptop, l, monitor, or m are accepted
		echo 2nd parameter is brightness multiplier: 1.0 by default
	fi
}

# Navigation shortcuts
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

# Double-check before permanently deleting files with rm
# Warning: Overriding default Linux commands is... controversial
alias rm='rm -i'

# Sleep computer
# Requires sudo apt install pm-utils
alias zzz='sudo pm-suspend'
# Restart WiFi (useful for after waking up from sleep)
alias wake='sudo service network-manager restart'
# Test internet connection
alias pingg='ping www.google.com'

# Just for fun: ~3% chance of cow fortunes every time a new terminal is opened :D
if [ $RANDOM -le 1000 ]; then fortune | cowsay; fi